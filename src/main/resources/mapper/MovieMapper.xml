<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.boot_mybatis.dao.MovieMapper">


	<resultMap type="com.example.boot_mybatis.model.Genre"
		id="genre">
		<id property="id" column="genre_id"></id>
		<result property="genre" column="genre" />
	</resultMap>

	<resultMap type="com.example.boot_mybatis.model.Movie"
		id="movielist">
		<id property="id" column="movie_id"></id>
		<result property="title" column="movie_title" />
		<result property="description" column="movie_description" />
		<result property="releasedate" column="movie_releasedate" />
		<collection property="movieGenre" ofType="genre"
			resultMap="genre">
			<id property="id" column="genre_id"></id>
			<result property="genre" column="genre" />
		</collection>


	</resultMap>


	<select id="getListMovie" parameterType="Map"
		resultMap="movielist">
		SELECT * FROM (
		SELECT * FROM movie where

		(movie_releasedate between #{fromdate} and #{todate})

		<if test="search != '' and search != null">
			AND (movie_title LIKE #{search} || movie_description LIKE #{search})
		</if>
		
		<!-- LIMIT 10 OFFSET #{offset} -->
		)as m1

		Inner join movie_genre
		On m1.movie_id = movie_genre.movie_id

		Inner join genre
		on movie_genre.genre_id = genre.genre_id
		<if test="genre != null and genre !=''">
			WHERE 1=1 AND
			<foreach collection="genre" item="genre1" separator="OR">
				genre.genre_id = #{genre1}
			</foreach>
		</if>
		ORDER BY movie_releasedate ${sortby}
		
		

		<!-- LIMIT 10 OFFSET #{offset} -->


	</select>

	<insert id="addMovie" keyProperty="id" useGeneratedKeys="true">
		INSERT
		INTO movie(movie_title, movie_description,
		movie_releasedate)
		VALUES(#{movie.title}, #{movie.description}, #{movie.releasedate});
	</insert>

	<insert id="addMovieGenre">
	
			INSERT INTO movie_genre(movie_id, genre_id)
			VALUES(#{movie_id}, #{genre_id})
		

	</insert>
	
	<select id="getMoviebyId" parameterType="Int"
		resultMap="movielist">
		
		SELECT * FROM (
		SELECT * FROM movie where movie_id = ${id}) as m1

		Inner join movie_genre
		On m1.movie_id = movie_genre.movie_id
		Inner join genre
		on movie_genre.genre_id = genre.genre_id
		
	</select>
	
	





</mapper>